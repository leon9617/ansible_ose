user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;
    
    keepalive_timeout  65;
    
    #gzip  on;
    
    include /etc/nginx/conf.d/*.conf;
}

stream {

        upstream k8s-{{ k8s_name_cluster }} {
                server bootstrap.{{ zone_dns_server }}:6443;
                server master-0.{{ zone_dns_server }}:6443;
                server master-1.{{ zone_dns_server }}:6443;
                server master-2.{{ zone_dns_server }}:6443;
        }

        upstream machine-{{ machine_name_cluster }} {
                server bootstrap.{{ zone_dns_server }}:22623;
                server master-0.{{ zone_dns_server }}:22623;
                server master-1.{{ zone_dns_server }}:22623;
                server master-2.{{ zone_dns_server }}:22623;
        }

        server {
                listen 6443;
                proxy_pass k8s-{{ k8s_name_cluster }};
        }

        server {
                listen 22623;
                proxy_pass machine-{{ machine_name_cluster }};
        }

        upstream http-{{ http_name_cluster }} {
                server worker-0.{{ zone_dns_server }}:80;
                server worker-1.{{ zone_dns_server }}:80;
                server worker-2.{{ zone_dns_server }}:80;
        }

        upstream https-{{ https_name_cluster }} {
                server worker-0.{{ zone_dns_server }}:443;
                server worker-1.{{ zone_dns_server }}:443;
                server worker-2.{{ zone_dns_server }}:443;
        }

        server {
                listen 443;
                proxy_pass https-{{ https_name_cluster }};
        }

        server {
                listen 80;
                proxy_pass http-{{ http_name_cluster }};
        }
}
